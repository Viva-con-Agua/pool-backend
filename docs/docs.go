// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/crews": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Crew"
                ],
                "summary": "Get a List of  Crews",
                "parameters": [
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "organisation_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "organisation_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Crew"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/vcago.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Crew"
                ],
                "summary": "Update a Crew",
                "parameters": [
                    {
                        "description": "Crew Data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CrewUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Crew"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "creates an  Crew object.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Crew"
                ],
                "summary": "Create a Crew",
                "parameters": [
                    {
                        "description": "Crew Data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CrewCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Crew"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/crews/public": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Crew"
                ],
                "summary": "Get a List of CrewPublic",
                "parameters": [
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "organisation_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "organisation_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.CrewPublic"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/vcago.Response"
                        }
                    }
                }
            }
        },
        "/crews/{id}": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Crew"
                ],
                "summary": "Delete a Crew by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Crew ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vmod.DeletedResponse"
                        }
                    }
                }
            }
        },
        "/events/artist": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Get a List of Artists",
                "parameters": [
                    {
                        "type": "string",
                        "name": "createdFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "createdTo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "updatedFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "updatedTo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Artist"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/vcago.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Get a Artist by ID",
                "parameters": [
                    {
                        "description": "Artist Data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ArtistUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Artist"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "creates an  Artist object.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Create a Artist",
                "parameters": [
                    {
                        "description": "Artist Data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ArtistCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Artist"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/events/artist/{id}": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Get a  Artist by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Artist"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artist"
                ],
                "summary": "Get a  Artist by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vmod.DeletedResponse"
                        }
                    }
                }
            }
        },
        "/events/event": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Get a List of Event",
                "parameters": [
                    {
                        "type": "string",
                        "name": "createdFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "createdTo",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "crewID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "endAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "eventASPID",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "eventState",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fullCount",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "internalASPID",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "missingApplications",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "onlyApply",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "organisationId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortField",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "startAt",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "updatedFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "updatedTo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Event"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/vcago.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Update a Event",
                "parameters": [
                    {
                        "description": "Event Data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EventUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Event"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "creates an Event object.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Create a Event",
                "parameters": [
                    {
                        "description": "Event Data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EventCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Event"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/events/event/details/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Get a Event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.EventDetails"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/events/event/email": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Get a List of Event",
                "parameters": [
                    {
                        "type": "string",
                        "name": "createdFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "createdTo",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "crewID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "endAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "eventASPID",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "eventState",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fullCount",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "internalASPID",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "missingApplications",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "onlyApply",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "organisationId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortField",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "startAt",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "updatedFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "updatedTo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.EventPublic"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/vcago.Response"
                        }
                    }
                }
            }
        },
        "/events/event/public": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Get a List of Event",
                "parameters": [
                    {
                        "type": "string",
                        "name": "createdFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "createdTo",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "crewID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "endAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "eventASPID",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "eventState",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fullCount",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "internalASPID",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "missingApplications",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "onlyApply",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "organisationId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortField",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "startAt",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "updatedFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "updatedTo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.EventPublic"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/vcago.Response"
                        }
                    }
                }
            }
        },
        "/events/event/sync/{id}": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Sync Event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vcago.Response"
                        }
                    }
                }
            }
        },
        "/events/event/user": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Get a List of Event",
                "parameters": [
                    {
                        "type": "string",
                        "name": "createdFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "createdTo",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "crewID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "endAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "eventASPID",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "eventState",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fullCount",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "internalASPID",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "missingApplications",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "onlyApply",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "organisationId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortField",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "startAt",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "updatedFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "updatedTo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ListDetailsEvent"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/vcago.Response"
                        }
                    }
                }
            }
        },
        "/events/event/view/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Get a Event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.EventPublic"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/events/event/{id}": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Get a Event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Event"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Delete a Event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vmod.DeletedResponse"
                        }
                    }
                }
            }
        },
        "/finances/deposit": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deposit"
                ],
                "summary": "Get a List of Deposit",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "confirmer",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "createdFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "createdTo",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "creator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "crewID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "hasExternal",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "reasonForPayment",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortDirection",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortField",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "updatedFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "updatedTo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.ResponseListed"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Deposit"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deposit"
                ],
                "summary": "Update a Deposit",
                "parameters": [
                    {
                        "description": "Deposit Data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DepositUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.ResponseUpdated"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Deposit"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/vcago.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Document with given ID",
                        "schema": {
                            "$ref": "#/definitions/vcago.MongoNoDocumentErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "creates an Deposit object.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deposit"
                ],
                "summary": "Create a Deposit",
                "parameters": [
                    {
                        "description": "Deposit Data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DepositCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully Created Deposit",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.ResponseCreated"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Deposit"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/vcago.ValidationErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicated Key",
                        "schema": {
                            "$ref": "#/definitions/vcago.MongoDuplicatedErrorResponse"
                        }
                    }
                }
            }
        },
        "/finances/deposit/sync/{id}": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deposit"
                ],
                "summary": "Sync Deposit by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deposit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vcago.ResponseSynced"
                        }
                    },
                    "404": {
                        "description": "No Document with given ID",
                        "schema": {
                            "$ref": "#/definitions/vcago.MongoNoDocumentErrorResponse"
                        }
                    }
                }
            }
        },
        "/finances/deposit/{id}": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deposit"
                ],
                "summary": "Get a Deposit by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deposit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.ResponseSelected"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Deposit"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "No Document with given ID",
                        "schema": {
                            "$ref": "#/definitions/vcago.MongoNoDocumentErrorResponse"
                        }
                    }
                }
            }
        },
        "/fincances/deposit/{id}": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deposit"
                ],
                "summary": "Delete a Deposit by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deposit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.ResponseDeleted"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "No Document with given ID",
                        "schema": {
                            "$ref": "#/definitions/vcago.MongoNoDocumentErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/address": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Get a List of  Addresss",
                "parameters": [
                    {
                        "type": "string",
                        "name": "createdFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "createdTo",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "crewID",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "updatedFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "updatedTo",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "userID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Address"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/vcago.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Get a  Address by ID",
                "parameters": [
                    {
                        "description": "Address Data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddressUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Address"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "creates an  Address object.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Create a Address",
                "parameters": [
                    {
                        "description": "Address Data",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddressCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Address"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/address/{id}": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Crew"
                ],
                "summary": "Get a Crew by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Crew ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Crew"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Delete a  Address by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vmod.DeletedResponse"
                        }
                    }
                }
            }
        },
        "/users/avatar": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "creates an  Avatar object.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Avatar"
                ],
                "summary": "Uploads a Avatar",
                "parameters": [
                    {
                        "description": "Avatar File",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AvatarFile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/vcago.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/models.Avatar"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/avatar/{id}": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "image/png"
                ],
                "tags": [
                    "Avatar"
                ],
                "summary": "Get a  Avatar by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Avatar ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Download Image",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Avatar"
                ],
                "summary": "Get a  Avatar by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Avatar ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vmod.DeletedResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Active": {
            "type": "object",
            "properties": {
                "crew_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "since": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Activity": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "model_id": {
                    "type": "string"
                },
                "model_type": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "status": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.UserDatabase"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Address": {
            "type": "object",
            "properties": {
                "additional": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "number": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "models.AddressCreate": {
            "type": "object",
            "required": [
                "city",
                "country",
                "country_code",
                "number",
                "street",
                "zip"
            ],
            "properties": {
                "additional": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "models.AddressUpdate": {
            "type": "object",
            "properties": {
                "additional": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "models.Artist": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ArtistCreate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ArtistUpdate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Avatar": {
            "type": "object",
            "properties": {
                "file_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.AvatarFile": {
            "type": "object",
            "properties": {
                "file": {},
                "header": {
                    "$ref": "#/definitions/multipart.FileHeader"
                }
            }
        },
        "models.City": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "place_id": {
                    "type": "string"
                },
                "position": {
                    "$ref": "#/definitions/vmod.Position"
                }
            }
        },
        "models.Crew": {
            "type": "object",
            "properties": {
                "abbreviation": {
                    "type": "string"
                },
                "additional": {
                    "type": "string"
                },
                "asp_selection": {
                    "type": "string"
                },
                "cities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.City"
                    }
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mailbox_id": {
                    "type": "string"
                },
                "mattermost_username": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "name": {
                    "type": "string"
                },
                "organisation": {
                    "$ref": "#/definitions/models.Organisation"
                },
                "organisation_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.CrewCreate": {
            "type": "object",
            "properties": {
                "abbreviation": {
                    "type": "string"
                },
                "additional": {
                    "type": "string"
                },
                "asp_selection": {
                    "type": "string"
                },
                "cities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.City"
                    }
                },
                "email": {
                    "type": "string"
                },
                "mattermost_username": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organisation_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.CrewPublic": {
            "type": "object",
            "properties": {
                "cities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.City"
                    }
                },
                "id": {
                    "type": "string"
                },
                "mattermost_username": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organisation": {
                    "$ref": "#/definitions/models.Organisation"
                },
                "organisation_id": {
                    "type": "string"
                }
            }
        },
        "models.CrewUpdate": {
            "type": "object",
            "properties": {
                "abbreviation": {
                    "type": "string"
                },
                "additional": {
                    "type": "string"
                },
                "asp_selection": {
                    "type": "string"
                },
                "cities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.City"
                    }
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mattermost_username": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organisation_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.Deposit": {
            "type": "object",
            "properties": {
                "confirmer": {
                    "$ref": "#/definitions/models.User"
                },
                "creator": {
                    "$ref": "#/definitions/models.User"
                },
                "crew": {
                    "$ref": "#/definitions/models.Crew"
                },
                "crew_id": {
                    "type": "string"
                },
                "date_of_deposit": {
                    "type": "integer"
                },
                "deposit_units": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DepositUnit"
                    }
                },
                "external": {
                    "$ref": "#/definitions/models.External"
                },
                "has_external": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "money": {
                    "$ref": "#/definitions/vmod.Money"
                },
                "reason_for_payment": {
                    "type": "string"
                },
                "receipts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ReceiptFile"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.DepositCreate": {
            "type": "object",
            "required": [
                "crew_id"
            ],
            "properties": {
                "crew_id": {
                    "type": "string"
                },
                "deposit_units": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DepositUnitCreate"
                    }
                },
                "external": {
                    "$ref": "#/definitions/models.External"
                },
                "has_external": {
                    "type": "boolean"
                }
            }
        },
        "models.DepositDatabase": {
            "type": "object",
            "properties": {
                "confirmer_id": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "string"
                },
                "crew_id": {
                    "type": "string"
                },
                "date_of_deposit": {
                    "type": "integer"
                },
                "external": {
                    "$ref": "#/definitions/models.External"
                },
                "has_external": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "money": {
                    "$ref": "#/definitions/vmod.Money"
                },
                "reason_for_payment": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.DepositUnit": {
            "type": "object",
            "properties": {
                "deposit_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "money": {
                    "$ref": "#/definitions/vmod.Money"
                },
                "status": {
                    "type": "string"
                },
                "taking": {
                    "$ref": "#/definitions/models.Taking"
                },
                "taking_id": {
                    "type": "string"
                }
            }
        },
        "models.DepositUnitCreate": {
            "type": "object",
            "properties": {
                "money": {
                    "$ref": "#/definitions/vmod.Money"
                },
                "taking_id": {
                    "type": "string"
                }
            }
        },
        "models.DepositUnitTaking": {
            "type": "object",
            "properties": {
                "deposit": {
                    "$ref": "#/definitions/models.DepositDatabase"
                },
                "deposit_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "money": {
                    "$ref": "#/definitions/vmod.Money"
                },
                "status": {
                    "type": "string"
                },
                "taking": {
                    "$ref": "#/definitions/models.Taking"
                },
                "taking_id": {
                    "type": "string"
                }
            }
        },
        "models.DepositUnitUpdate": {
            "type": "object",
            "properties": {
                "deposit_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "money": {
                    "$ref": "#/definitions/vmod.Money"
                },
                "status": {
                    "type": "string"
                },
                "taking_id": {
                    "type": "string"
                },
                "update_state": {
                    "type": "string"
                }
            }
        },
        "models.DepositUpdate": {
            "type": "object",
            "properties": {
                "crew_id": {
                    "type": "string"
                },
                "date_of_deposit": {
                    "type": "integer"
                },
                "deposit_units": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DepositUnitUpdate"
                    }
                },
                "external": {
                    "$ref": "#/definitions/models.External"
                },
                "has_external": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "money": {
                    "$ref": "#/definitions/vmod.Money"
                },
                "status": {
                    "type": "string"
                },
                "update_state": {
                    "type": "string"
                }
            }
        },
        "models.Event": {
            "type": "object",
            "properties": {
                "additional_information": {
                    "type": "string"
                },
                "application": {
                    "$ref": "#/definitions/models.EventApplication"
                },
                "applications": {
                    "$ref": "#/definitions/models.EventApplications"
                },
                "artist_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Artist"
                    }
                },
                "creator": {
                    "$ref": "#/definitions/models.User"
                },
                "crew": {
                    "$ref": "#/definitions/models.Crew"
                },
                "crew_id": {
                    "type": "string"
                },
                "deposit_id": {
                    "type": "string"
                },
                "editor_id": {
                    "type": "string"
                },
                "end_at": {
                    "type": "integer"
                },
                "event_asp": {
                    "$ref": "#/definitions/models.User"
                },
                "event_asp_id": {
                    "type": "string"
                },
                "event_state": {
                    "$ref": "#/definitions/models.EventState"
                },
                "event_tools": {
                    "$ref": "#/definitions/models.EventTools"
                },
                "external_asp": {
                    "$ref": "#/definitions/models.UserExternal"
                },
                "id": {
                    "type": "string"
                },
                "internal_asp": {
                    "$ref": "#/definitions/models.User"
                },
                "internal_asp_id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.Location"
                },
                "meeting_url": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "name": {
                    "type": "string"
                },
                "organisation_id": {
                    "type": "string"
                },
                "organizer": {
                    "$ref": "#/definitions/models.Organizer"
                },
                "organizer_id": {
                    "type": "string"
                },
                "participations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Participation"
                    }
                },
                "start_at": {
                    "type": "integer"
                },
                "taking_id": {
                    "type": "string"
                },
                "tour_id": {
                    "type": "string"
                },
                "type_of_event": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "models.EventASPPublic": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "mattermost_username": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.EventApplication": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "integer"
                },
                "supporter_count": {
                    "type": "integer"
                }
            }
        },
        "models.EventApplications": {
            "type": "object",
            "properties": {
                "confirmed": {
                    "type": "integer"
                },
                "rejected": {
                    "type": "integer"
                },
                "requested": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "withdrawn": {
                    "type": "integer"
                }
            }
        },
        "models.EventCreate": {
            "type": "object",
            "properties": {
                "additional_information": {
                    "type": "string"
                },
                "application": {
                    "$ref": "#/definitions/models.EventApplication"
                },
                "artist_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "crew_id": {
                    "type": "string"
                },
                "end_at": {
                    "type": "integer"
                },
                "event_asp_id": {
                    "type": "string"
                },
                "event_state": {
                    "$ref": "#/definitions/models.EventState"
                },
                "event_tools": {
                    "$ref": "#/definitions/models.EventTools"
                },
                "external_asp": {
                    "$ref": "#/definitions/models.UserExternal"
                },
                "internal_asp_id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.Location"
                },
                "meeting_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organisation_id": {
                    "type": "string"
                },
                "organizer_id": {
                    "type": "string"
                },
                "start_at": {
                    "type": "integer"
                },
                "tour_id": {
                    "type": "string"
                },
                "type_of_event": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "models.EventDetails": {
            "type": "object",
            "properties": {
                "event_asp": {
                    "$ref": "#/definitions/models.EventASPPublic"
                },
                "meeting_url": {
                    "type": "string"
                }
            }
        },
        "models.EventPublic": {
            "type": "object",
            "properties": {
                "additional_information": {
                    "type": "string"
                },
                "application": {
                    "$ref": "#/definitions/models.EventApplication"
                },
                "artist_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Artist"
                    }
                },
                "crew": {
                    "$ref": "#/definitions/models.CrewPublic"
                },
                "crew_id": {
                    "type": "string"
                },
                "end_at": {
                    "type": "integer"
                },
                "event_state": {
                    "$ref": "#/definitions/models.EventStatePublic"
                },
                "event_tools": {
                    "$ref": "#/definitions/models.EventTools"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.Location"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "name": {
                    "type": "string"
                },
                "organisation": {
                    "$ref": "#/definitions/models.Organisation"
                },
                "organizer": {
                    "$ref": "#/definitions/models.Organizer"
                },
                "organizer_id": {
                    "type": "string"
                },
                "start_at": {
                    "type": "integer"
                },
                "tour_id": {
                    "type": "string"
                },
                "type_of_event": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "models.EventState": {
            "type": "object",
            "properties": {
                "crew_confirmation": {
                    "type": "string"
                },
                "deposit_id": {
                    "type": "string"
                },
                "internal_confirmation": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "taking_id": {
                    "type": "string"
                }
            }
        },
        "models.EventStatePublic": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string"
                }
            }
        },
        "models.EventTools": {
            "type": "object",
            "properties": {
                "special": {
                    "type": "string"
                },
                "tools": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.EventUpdate": {
            "type": "object",
            "properties": {
                "additional_information": {
                    "type": "string"
                },
                "application": {
                    "$ref": "#/definitions/models.EventApplication"
                },
                "artist_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "crew": {
                    "$ref": "#/definitions/models.Crew"
                },
                "crew_id": {
                    "type": "string"
                },
                "end_at": {
                    "type": "integer"
                },
                "event_asp_id": {
                    "type": "string"
                },
                "event_state": {
                    "$ref": "#/definitions/models.EventState"
                },
                "event_tools": {
                    "$ref": "#/definitions/models.EventTools"
                },
                "external_asp": {
                    "$ref": "#/definitions/models.UserExternal"
                },
                "id": {
                    "type": "string"
                },
                "internal_asp_id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.Location"
                },
                "meeting_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organisation_id": {
                    "type": "string"
                },
                "organizer_id": {
                    "type": "string"
                },
                "start_at": {
                    "type": "integer"
                },
                "tour_id": {
                    "type": "string"
                },
                "type_of_event": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "models.External": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "asp": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "organisation": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                },
                "reason_for_payment": {
                    "type": "string"
                },
                "reciept": {
                    "type": "boolean"
                }
            }
        },
        "models.ListDetailsEvent": {
            "type": "object",
            "properties": {
                "additional_information": {
                    "type": "string"
                },
                "application": {
                    "$ref": "#/definitions/models.EventApplication"
                },
                "applications": {
                    "$ref": "#/definitions/models.EventApplications"
                },
                "artist_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Artist"
                    }
                },
                "crew": {
                    "$ref": "#/definitions/models.Crew"
                },
                "crew_id": {
                    "type": "string"
                },
                "end_at": {
                    "type": "integer"
                },
                "event_asp": {
                    "$ref": "#/definitions/models.EventASPPublic"
                },
                "event_asp_id": {
                    "type": "string"
                },
                "event_state": {
                    "$ref": "#/definitions/models.EventState"
                },
                "event_tools": {
                    "$ref": "#/definitions/models.EventTools"
                },
                "id": {
                    "type": "string"
                },
                "internal_asp_id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.Location"
                },
                "meeting_url": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "name": {
                    "type": "string"
                },
                "organizer": {
                    "$ref": "#/definitions/models.Organizer"
                },
                "organizer_id": {
                    "type": "string"
                },
                "participations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParticipationMinimal"
                    }
                },
                "start_at": {
                    "type": "integer"
                },
                "tour_id": {
                    "type": "string"
                },
                "type_of_event": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "models.Location": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "place_id": {
                    "type": "string"
                },
                "position": {
                    "$ref": "#/definitions/models.Position"
                },
                "street": {
                    "type": "string"
                },
                "sublocality": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "models.NVM": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "since": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Newsletter": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "user_id": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Organisation": {
            "type": "object",
            "properties": {
                "abbreviation": {
                    "type": "string"
                },
                "default_asp": {
                    "$ref": "#/definitions/models.UserContact"
                },
                "default_asp_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Organizer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Participation": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "crew": {
                    "$ref": "#/definitions/models.Crew"
                },
                "crew_id": {
                    "type": "string"
                },
                "event": {
                    "$ref": "#/definitions/models.Event"
                },
                "event_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modified": {
                    "description": "Confirmer UserInternal   ` + "`" + `json:\"confirmer\" bson:\"confirmer\"` + "`" + `",
                    "allOf": [
                        {
                            "$ref": "#/definitions/vmod.Modified"
                        }
                    ]
                },
                "status": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.ParticipationMinimal": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.Position": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                }
            }
        },
        "models.Profile": {
            "type": "object",
            "properties": {
                "birthdate": {
                    "type": "integer"
                },
                "birthdate_datetime": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mattermost_username": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "phone": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.ProfileMinimal": {
            "type": "object",
            "properties": {
                "birthdate": {
                    "type": "integer"
                },
                "birthdate_datetime": {
                    "type": "string"
                },
                "mattermost_username": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.ReceiptFile": {
            "type": "object",
            "properties": {
                "deposit_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                }
            }
        },
        "models.Source": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "money": {
                    "$ref": "#/definitions/vmod.Money"
                },
                "norms": {
                    "type": "string"
                },
                "payment_type": {
                    "type": "string"
                },
                "taking_id": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Taking": {
            "type": "object",
            "properties": {
                "activities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Activity"
                    }
                },
                "comment": {
                    "type": "string"
                },
                "creator": {
                    "$ref": "#/definitions/models.UserDatabase"
                },
                "crew": {
                    "$ref": "#/definitions/models.Crew"
                },
                "crew_id": {
                    "type": "string"
                },
                "date_of_taking": {
                    "type": "integer"
                },
                "deposit_units": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DepositUnitTaking"
                    }
                },
                "editor_id": {
                    "type": "string"
                },
                "event": {
                    "$ref": "#/definitions/models.Event"
                },
                "id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "money": {
                    "$ref": "#/definitions/vmod.Money"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Source"
                    }
                },
                "state": {
                    "$ref": "#/definitions/models.TakingState"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.TakingState": {
            "type": "object",
            "properties": {
                "confirmed": {
                    "$ref": "#/definitions/vmod.Money"
                },
                "no_income": {
                    "type": "boolean"
                },
                "open": {
                    "$ref": "#/definitions/vmod.Money"
                },
                "wait": {
                    "$ref": "#/definitions/vmod.Money"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "active": {
                    "$ref": "#/definitions/models.Active"
                },
                "address": {
                    "$ref": "#/definitions/models.Address"
                },
                "address_id": {
                    "type": "string"
                },
                "avatar": {
                    "$ref": "#/definitions/models.Avatar"
                },
                "confirmed": {
                    "type": "boolean"
                },
                "country": {
                    "type": "string"
                },
                "crew": {
                    "$ref": "#/definitions/models.UserCrew"
                },
                "display_name": {
                    "type": "string"
                },
                "drops_id": {
                    "description": "extends the vcago.User",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_login_date": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "last_update": {
                    "type": "string"
                },
                "mailbox_id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "newsletter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Newsletter"
                    }
                },
                "nvm": {
                    "$ref": "#/definitions/models.NVM"
                },
                "organisation": {
                    "type": "string"
                },
                "organisation_id": {
                    "type": "string"
                },
                "pool_roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vmod.Role"
                    }
                },
                "privacy_policy": {
                    "type": "boolean"
                },
                "profile": {
                    "$ref": "#/definitions/models.Profile"
                },
                "system_roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vmod.Role"
                    }
                }
            }
        },
        "models.UserContact": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "profile": {
                    "$ref": "#/definitions/models.ProfileMinimal"
                }
            }
        },
        "models.UserCrew": {
            "type": "object",
            "properties": {
                "crew_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mailbox_id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "name": {
                    "type": "string"
                },
                "organisation": {
                    "type": "string"
                },
                "organisation_id": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vmod.Role"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.UserDatabase": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name"
            ],
            "properties": {
                "confirmed": {
                    "type": "boolean"
                },
                "country": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "drops_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_login_date": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "last_update": {
                    "type": "string"
                },
                "mailbox_id": {
                    "type": "string"
                },
                "modified": {
                    "$ref": "#/definitions/vmod.Modified"
                },
                "organisation_id": {
                    "type": "string"
                },
                "privacy_policy": {
                    "type": "boolean"
                },
                "system_roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vmod.Role"
                    }
                }
            }
        },
        "models.UserExternal": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "multipart.FileHeader": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "header": {
                    "$ref": "#/definitions/textproto.MIMEHeader"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "textproto.MIMEHeader": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "vcago.BindErrorResponse": {
            "type": "object",
            "properties": {
                "list_size": {
                    "type": "integer"
                },
                "message": {
                    "type": "string",
                    "example": "bind error"
                },
                "model": {
                    "type": "string"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "cant bind string to int"
                    ]
                },
                "type": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "vcago.MongoDuplicatedErrorResponse": {
            "type": "object",
            "properties": {
                "list_size": {
                    "type": "integer"
                },
                "message": {
                    "type": "string",
                    "example": "duplicate key error: \u003ckey\u003e"
                },
                "model": {
                    "type": "string"
                },
                "payload": {},
                "type": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "vcago.MongoNoDocumentErrorResponse": {
            "type": "object",
            "properties": {
                "list_size": {
                    "type": "integer"
                },
                "message": {
                    "type": "string",
                    "example": "document not found"
                },
                "model": {
                    "type": "string"
                },
                "payload": {},
                "type": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "vcago.Response": {
            "type": "object",
            "properties": {
                "list_size": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "payload": {},
                "type": {
                    "type": "string"
                }
            }
        },
        "vcago.ResponseCreated": {
            "type": "object",
            "properties": {
                "list_size": {
                    "type": "integer"
                },
                "message": {
                    "type": "string",
                    "example": "successfully_created"
                },
                "model": {
                    "type": "string"
                },
                "payload": {},
                "type": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "vcago.ResponseDeleted": {
            "type": "object",
            "properties": {
                "list_size": {
                    "type": "integer"
                },
                "message": {
                    "type": "string",
                    "example": "successfully_deleted"
                },
                "model": {
                    "type": "string"
                },
                "payload": {},
                "type": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "vcago.ResponseListed": {
            "type": "object",
            "properties": {
                "list_size": {
                    "type": "integer"
                },
                "message": {
                    "type": "string",
                    "example": "successfully_selected"
                },
                "model": {
                    "type": "string"
                },
                "payload": {},
                "type": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "vcago.ResponseSelected": {
            "type": "object",
            "properties": {
                "list_size": {
                    "type": "integer"
                },
                "message": {
                    "type": "string",
                    "example": "successfully_selected"
                },
                "model": {
                    "type": "string"
                },
                "payload": {},
                "type": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "vcago.ResponseSynced": {
            "type": "object",
            "properties": {
                "list_size": {
                    "type": "integer"
                },
                "message": {
                    "type": "string",
                    "example": "successfully_synced"
                },
                "model": {
                    "type": "string"
                },
                "payload": {},
                "type": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "vcago.ResponseUpdated": {
            "type": "object",
            "properties": {
                "list_size": {
                    "type": "integer"
                },
                "message": {
                    "type": "string",
                    "example": "successfully_updated"
                },
                "model": {
                    "type": "string"
                },
                "payload": {},
                "type": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "vcago.ValidationErrorResponse": {
            "type": "object",
            "properties": {
                "list_size": {
                    "type": "integer"
                },
                "message": {
                    "type": "string",
                    "example": "validate error"
                },
                "model": {
                    "type": "string"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "currency is required"
                    ]
                },
                "type": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "vmod.DeletedResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "vmod.Modified": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "integer"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "vmod.Money": {
            "description": "Beispiel eines benutzerdefinierten Geldtyps",
            "type": "object",
            "required": [
                "currency"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "vmod.Position": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                }
            }
        },
        "vmod.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "root": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Bearer key",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "CookieAuth": {
            "type": "apiKey",
            "name": "access_cookie",
            "in": "cookie"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://hydra.vivaconagua.org/oauth/authorize",
            "tokenUrl": "https://hydra.vivaconagua.org/oauth/token"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "3.0.0",
	Host:             "pool3-api.vivaconagua.org",
	BasePath:         "/v1",
	Schemes:          []string{"https"},
	Title:            "Pool API documentation",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
